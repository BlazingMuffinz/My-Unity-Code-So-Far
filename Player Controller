

public LayerMask groundLayer;
public BoxCollider2D groundCheck2;
private Rigidbody2D rb;
private bool rotated;
public Vector2 norm;
public float zed;
// Start is called before the first frame update
void Start()
{
rb = GetComponent<Rigidbody2D>();
rotated = false;
zed = transform.eulerAngles.z;
}
private bool WallInFront()
{
RaycastHit2D raycastHit = Physics2D.Raycast(transform.position, transform.right, .5f, groundLayer);
if (raycastHit.collider != null)
{
Debug.DrawRay(transform.position, transform.right, Color.green, .5f);
}
else
{
Debug.DrawRay(transform.position, transform.right, Color.red, .5f);
}
return raycastHit.collider != null;
}

private bool Grounded()
{
float extraHeight = .1f;
RaycastHit2D raycastHit = Physics2D.BoxCast(groundCheck2.bounds.center, groundCheck2.bounds.size, 0f, -transform.up, extraHeight, groundLayer);
if (raycastHit.collider != null)
{
norm = raycastHit.normal;
Debug.DrawRay(raycastHit.point, raycastHit.normal, Color.black);
}
return raycastHit.collider != null;
}

// Update is called once per frame
void Update()
{
zed = Mathf.Round(zed / 90) * 90;
}

private void FixedUpdate()
{
if (Grounded() && !WallInFront())
{
if (zed == 0)
{
rb.velocity = new Vector2(speed * Time.deltaTime, rb.velocity.y);
}
else if (zed == 270)
{
rb.velocity = new Vector2(rb.velocity.x, -speed * Time.deltaTime);
}
else if (zed == 180)
{
rb.velocity = new Vector2(-speed * Time.deltaTime, rb.velocity.y);
}
else if (zed == 90)
{
rb.velocity = new Vector2(rb.velocity.x, speed * Time.deltaTime);
}
}
else if (!Grounded() && !WallInFront() && !rotated)
{
RotateDown();
}
else if (Grounded() && WallInFront())
{
RotateUp();
}

}

void RotateDown()
{
rb.velocity = Vector2.zero;
Quaternion newRot = Quaternion.Euler(0, 0, zed - 90);
transform.rotation = Quaternion.Slerp(transform.rotation, newRot, 1f);
}

void RotateUp()
{
rb.velocity = Vector2.zero;
Quaternion newRot = Quaternion.Euler(0, 0, zed + 90);
transform.rotation = Quaternion.Slerp(transform.rotation, newRot, 1f);
}
